## WeatherFlow PiConsole: Raspberry Pi Python console for WeatherFlow Tempest
## and Smart Home Weather stations.
## Copyright (C) 2018-2022 Peter Davis

## This program is free software: you can redistribute it and/or modify it under
## the terms of the GNU General Public License as published by the Free Software
## Foundation, either version 3 of the License, or (at your option) any later
## version.

## This program is distributed in the hope that it will be useful, but WITHOUT
## ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
## FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
## details.

## You should have received a copy of the GNU General Public License along with
## this program. If not, see <http://www.gnu.org/licenses/>.

## =============================================================================
## CUSTOM PanelButton AND MenuButton
## =============================================================================
<PanelButton@Button>:
    font_size: dp(15.5*app.scaleFactor)
    font_name: 'fonts/Inter-SemiBold.ttf'
    color: utils.rgba('#d6d6d6ff')
    background_color: (0,0,0,0)
    canvas.before:
        Color:
            rgba: utils.rgba('#1e1e1eff') if self.state=='normal' else utils.rgba('#00525aff')
        RoundedRectangle:
            pos: self.pos
            size: self.size
            radius: [14*app.scaleFactor]

<MenuButton@Button>:
    font_size: dp(15.5*app.scaleFactor)
    font_name: 'fonts/Inter-SemiBold.ttf'
    color: utils.rgba('#d6d6d6ff')
    background_color: (0,0,0,0)
    canvas.before:
        Color:
            rgba: utils.rgba('#1e1e1eff') if self.state=='normal' else utils.rgba('#00525aff')
        RoundedRectangle:
            pos: self.pos
            size: self.size
            radius: [14*app.scaleFactor]

## =============================================================================
## CUSTOM TabbedPanelItem AND MainMenuLayout
## =============================================================================
<MainMenuTab@TabbedPanelItem>:
    background_normal: 'atlas://atlas/wfpiconsole/tab_btn'
    background_down: 'atlas://atlas/wfpiconsole/tab_btn_pressed'
    font_name: 'fonts/Inter-SemiBold.ttf'
    font_size: dp(14.2*app.scaleFactor)
    color: utils.rgba('#d6d6d6ff')
    canvas.after:
        Color:
            rgb: [.3,.3,.3,1]
        Rectangle:
            pos: self.right - 1, self.y
            size: 1, self.height,

<MainMenuLayout@GridLayout>:
    padding: '5dp'
    cols: 1
    canvas.after:
        Color:
            rgb: [.3,.3,.3,1]
        Rectangle:
            pos: self.x + 1, self.y + 3
            size: self.width, 1

## =============================================================================
## CUSTOM DeviceSpinner, StationSpinner and SwitchButton
## =============================================================================
<SwitchButton@Button>
    canvas.before:
        Color:
            rgba: utils.rgba('#1e1e1eff') if self.state=='normal' else utils.rgba('#00525aff')
        RoundedRectangle:
            pos: self.pos
            size: self.size
            radius: [14*app.scaleFactor]
    background_normal: ''
    background_color: 0, 0, 0, 0
    font_size: dp(14*app.scaleFactor)
    font_name: 'fonts/Inter-SemiBold.ttf'
    color: utils.rgba('#d6d6d6ff')

<DeviceSpinner@Spinner>:
    canvas.before:
        Color:
            rgba: utils.rgba('#1e1e1eff') if self.state=='normal' else utils.rgba('#00525aff')
        RoundedRectangle:
            pos: self.pos
            size: self.size
            radius: [14*app.scaleFactor]
    font_size: dp(14*app.scaleFactor)
    font_name: 'fonts/Inter-SemiBold.ttf'
    color: utils.rgba('#d6d6d6ff')
    background_normal: ''
    background_color: 0, 0, 0, 0
    sync_height: True
    disabled: 1
    selected: 1 if self.text != 'Please select' and not self.disabled else 0
    pos_hint: {'center': (.5, .5)}
    option_cls: Factory.selectOption
    dropdown_cls: Factory.CustomDropdown

<StationSpinner@Spinner>:
    canvas.before:
        Color:
            rgba: utils.rgba('#1e1e1eff') if self.state=='normal' else utils.rgba('#00525aff')
        RoundedRectangle:
            pos: self.pos
            size: self.size
            radius: [14*app.scaleFactor]
    font_size: dp(14*app.scaleFactor)
    font_name: 'fonts/Inter-SemiBold.ttf'
    color: utils.rgba('#d6d6d6ff')
    background_normal: ''
    background_color: 0, 0, 0, 0
    sync_height: True
    pos_hint: {'center': (.5, .5)}
    option_cls: Factory.selectOption
    dropdown_cls: Factory.CustomDropdown

<selectOption@SpinnerOption>
    canvas.before:
        Color:
            rgba: utils.rgba('#404040ff') if self.state=='normal' else utils.rgba('#00525aff')
        RoundedRectangle:
            pos: [self.x+2, self.y+2]
            size: [self.width-4, self.height-4]
            radius: [14*app.scaleFactor]
    background_color: (0,0,1,0)
    font_size: dp(14*app.scaleFactor)
    font_name: 'fonts/Inter-SemiBold.ttf'
    color: utils.rgba('#c8c8c8ff')

<CustomDropdown@DropDown>:
    canvas.before:
        Color:
            rgba: utils.rgba('#101010ff')
        RoundedRectangle:
            pos: [self.x, self.y+1]
            size: [self.width, self.height-2]
            radius: [14*app.scaleFactor]

## =============================================================================
## PANEL BACKGROUNDS
## =============================================================================
<PanelBackground@FloatLayout>:
    _panelTitle: str()
    _panelStatus: str()
    pos_hint: {'x': 0/262, 'y': 0/202}
    size_hint: [1, 1]
    cols: 1
    canvas.before:
        Color:
            rgba: utils.rgba('ffffffff')
        RoundedRectangle:
            pos: self.pos
            size: self.size
            radius: (app.scaleFactor*2, app.scaleFactor*2)
        Color:
            rgba: utils.rgba('000000ff')
        Rectangle:
            pos: self.x+dp(app.scaleFactor), self.y+dp(app.scaleFactor)
            size: self.width-dp(app.scaleFactor*2), self.height-dp(app.scaleFactor*2)
    PanelTitle:
        id: Title
        text: root._panelTitle
    PanelStatus:
        id: Status
        text: root._panelStatus

<RainfallBackground@FloatLayout>:
    _panelTitle: str()
    _panelStatus: str()
    pos_hint: {'x': 0/262, 'y': 47/202}
    size_hint: [1, 155/202]
    cols: 1
    canvas.before:
        Color:
            rgba: utils.rgba('ffffffff')
        RoundedRectangle:
            pos: self.pos
            size: self.size
            radius: (app.scaleFactor*2, app.scaleFactor*2)
        Color:
            rgba: utils.rgba('000000ff')
        Rectangle:
            pos: self.x+dp(app.scaleFactor), self.y+dp(app.scaleFactor)
            size: self.width-dp(app.scaleFactor*2), self.height-dp(app.scaleFactor*2)
    PanelTitle:
        id: Title
        size_hint: (1, 13/155)
        pos_hint: {'x': 0, 'y': 138/155}
        text: root._panelTitle
    PanelStatus:
        id: Status
        size_hint: (0.97, 23 / 155)
        pos_hint: {'x': 0.015, 'y': 133 / 155}
        text: root._panelStatus

<UpdateNotifBackground@BoxLayout>:
    _panelTitle: str()
    pos_hint: {'x': 0, 'y': 0}
    size_hint: [1, 1]
    cols: 1
    canvas.before:
        Color:
            rgba: utils.rgba('f05e40ff')
        RoundedRectangle:
            pos: self.pos
            size: self.size
            radius: (app.scaleFactor*2, app.scaleFactor*2)
        Color:
            rgba: utils.rgba('141414ff')
        Rectangle:
            pos: self.x+dp(app.scaleFactor), self.y+dp(app.scaleFactor)
            size: self.width-dp(app.scaleFactor*2), self.height-dp(app.scaleFactor*2)
    PanelTitle:
        pos_hint: {'x': 0, 'y': 59/76}
        size_hint: (1, 13/76)
        text: root._panelTitle

# =============================================================================
# StationStatus PANELS
# =============================================================================
<station_status>:
    orientation: 'vertical'
    BoxLayout:
        orientation: 'vertical'
        padding: [dp(0),dp(0),dp(0),dp(10)]
        size_hint: (1,.44)
        MenuField:
            font_size: dp(16*app.scaleFactor)
            text: app.config['Station']['Name']
        MenuField:
            _color: '#9aba2fff' if app.CurrentConditions.Status['station_status'] == 'Online' else '#c8c8c8ff' if app.CurrentConditions.Status['station_status'] == '-' else '#d73027ff'
            text: 'Station status: [color=' + self._color + ']' + app.CurrentConditions.Status['station_status'] + '[/color]'
    GridLayout:
        cols: 2
        padding: [dp(0),dp(0),dp(0),dp(10)]
        size_hint: (1,.56)
        MenuField:
            text: 'Station time: ' + app.CurrentConditions.System['Time']
        MenuField:
            text: 'Station elevation: ' + '{:.2f}'.format(float(app.config['Station']['Elevation'])) + ' m'
        MenuField:
            text: 'Station latitude: ' + '{:.4f}'.format(float(app.config['Station']['Latitude'])) + '\u00B0'
        MenuField:
            text: 'Station Longitude: ' + '{:.4f}'.format(float(app.config['Station']['Longitude'])) + '\u00B0'
        MenuField:
            text: 'Hub firmware: ' + app.CurrentConditions.Status['hub_firmware']
        MenuField:
            text: 'Console version: [color=00a4b4ff]' + app.config['System']['Version'] + '[/color]'

# =============================================================================
# DEVICE STATUS PANELS
# =============================================================================
<tempest_status>:
    size_hint: (1,.1)
    orientation: 'horizontal'
    StatusField:
        size_hint: (.15,1)
        text: 'TEMPEST'
    StatusField:
        size_hint: (.12,1)
        text: app.CurrentConditions.Status['tempest_status']
    StatusField:
        size_hint: (.22,1)
        text: app.CurrentConditions.Status['tempest_sample_time']
    StatusField:
        size_hint: (.20,1)
        text: app.CurrentConditions.Status['tempest_voltage']
    StatusField:
        size_hint: (.31,1)
        text: app.CurrentConditions.Status['tempest_ob_count']

<sky_status>:
    size_hint: (1,.1)
    orientation: 'horizontal'
    StatusField:
        size_hint: (.15,1)
        text: 'SKY'
    StatusField:
        size_hint: (.12,1)
        text: app.CurrentConditions.Status['sky_status']
    StatusField:
        size_hint: (.22,1)
        text: app.CurrentConditions.Status['sky_sample_time']
    StatusField:
        size_hint: (.20,1)
        text: app.CurrentConditions.Status['sky_voltage']
    StatusField:
        size_hint: (.31,1)
        text: app.CurrentConditions.Status['sky_ob_count']

<out_air_status>:
    size_hint: (1,.1)
    orientation: 'horizontal'
    StatusField:
        size_hint: (.15,1)
        text: 'Outdoor AIR'
    StatusField:
        size_hint: (.12,1)
        text: app.CurrentConditions.Status['out_air_status']
    StatusField:
        size_hint: (.22,1)
        text: app.CurrentConditions.Status['out_air_sample_time']
    StatusField:
        size_hint: (.20,1)
        text: app.CurrentConditions.Status['out_air_voltage']
    StatusField:
        size_hint: (.31,1)
        text: app.CurrentConditions.Status['out_air_ob_count']

<in_air_status>:
    size_hint: (1,.1)
    orientation: 'horizontal'
    StatusField:
        size_hint: (.15,1)
        text: 'Indoor AIR'
    StatusField:
        size_hint: (.12,1)
        text: app.CurrentConditions.Status['in_air_status']
    StatusField:
        size_hint: (.22,1)
        text: app.CurrentConditions.Status['in_air_sample_time']
    StatusField:
        size_hint: (.20,1)
        text: app.CurrentConditions.Status['in_air_voltage']
    StatusField:
        size_hint: (.31,1)
        text: app.CurrentConditions.Status['in_air_ob_count']